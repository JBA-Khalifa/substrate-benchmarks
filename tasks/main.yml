---
 - name: delete past benchmark machine
   gcp_compute_instance:
       state: absent
       name: benchmark-vm
       machine_type: "{{ type }}"
       zone: "{{ zone }}"
       project: "{{ gcp_project }}"
       auth_kind: "{{ gcp_cred_kind }}"
       service_account_file: "{{ gcp_cred_file }}"
       scopes:
         - https://www.googleapis.com/auth/compute
 - name: create a disk
   gcp_compute_disk:
       name: 'benchmark-disk'
       size_gb: 20
       source_image: "{{ image }}"
       zone: "{{ zone }}"
       project: "{{ gcp_project }}"
       auth_kind: "{{ gcp_cred_kind }}"
       service_account_file: "{{ gcp_cred_file }}"
       scopes:
         - https://www.googleapis.com/auth/compute
       state: present
   register: disk
 - name: create a network
   gcp_compute_network:
       name: 'network-instance'
       project: "{{ gcp_project }}"
       auth_kind: "{{ gcp_cred_kind }}"
       service_account_file: "{{ gcp_cred_file }}"
       scopes:
         - https://www.googleapis.com/auth/compute
       state: present
   register: network
 - name: create a address
   gcp_compute_address:
       name: 'address-instance'
       region: "{{ region }}"
       project: "{{ gcp_project }}"
       auth_kind: "{{ gcp_cred_kind }}"
       service_account_file: "{{ gcp_cred_file }}"
       scopes:
         - https://www.googleapis.com/auth/compute
       state: present
   register: address
 - name: create the benchmark machine
   gcp_compute_instance:
       state: present
       name: benchmark-vm
       machine_type: "{{ type }}"
       disks:
         - auto_delete: true
           boot: true
           source: "{{ disk }}"
       network_interfaces:
           - network: "{{ network }}"
             access_configs:
               - name: 'External NAT'
                 nat_ip: "{{ address }}"
                 type: 'ONE_TO_ONE_NAT'
       zone: "{{ zone }}"
       project: "{{ gcp_project }}"
       auth_kind: "{{ gcp_cred_kind }}"
       service_account_file: "{{ gcp_cred_file }}"
       scopes:
         - https://www.googleapis.com/auth/compute
   register: instance

 - name: create working directory for benchmarking tool
   file:
     path: '{{work_dir}}/results'
     state: directory
 - name: download benchmarking tool
   get_url:
     url: '{{substrate_binary_url}}'
     dest: '{{work_dir}}/substrate'
     mode: 'u+x'
 - name: check substrate benchmark availability
   shell: |
     {{work_dir}}/substrate benchmark --version
 - name: collect date
   shell: date
   register: info_date
 - name: collect release info
   shell: lsb_release --all
   register: info_release
 - name: collect CPU info
   shell: lscpu
   register: info_cpu
 - name: collect memory info
   shell: free -h
   register: info_memory
 - name: write collected info to file
   template:
     src: templates/DEVICE_INFO.j2
     dest: '{{work_dir}}/results/DEVICE_INFO.md'

 - name: run the benchmarks
   shell: |
      {{work_dir}}/substrate benchmark\
        --chain dev\
        --execution=wasm\
        --wasm-execution=compiled\
        --pallet {{item[0]}}\
        --extrinsic {{item[1]}}\
        --steps {{benchmark_steps}}\
        --repeat {{benchmark_repeat}} > {{work_dir}}/results/{{item[0]}}.{{item[1]}}.txt
   with_nested:
      - '{{benchmarks}}'
   async: 0
   poll: 60

 - name: create local directory for results
   file:
     path: 'results'
     state: directory
   delegate_to: localhost
 - name: pull results from remote
   synchronize:
     mode: pull
     src: '{{work_dir}}/results/'
     dest: 'results/host_{{ansible_host}}/'
 - name: delete the benchmark machine
   gcp_compute_instance:
       state: absent
       name: benchmark-vm
       machine_type: "{{ type }}"
       zone: "{{ zone }}"
       project: "{{ gcp_project }}"
       auth_kind: "{{ gcp_cred_kind }}"
       service_account_file: "{{ gcp_cred_file }}"
       scopes:
         - https://www.googleapis.com/auth/compute
